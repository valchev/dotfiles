[color]
    diff = auto
    status = auto
    branch = auto
[core]
    whitespace = cr-at-eol
    autocrlf = true
[http]
    sllverify = false
    sslverify = false
[user]
    name = Alexander Valchev
    email = a.valchevbox@gmail.com
[push]
    default = tracking
[alias]
    c = commit -m
    co = checkout
    a = add
    d = diff
    dic = diff --cached
    ps = push
    s = status
    out = log origin..HEAD
    qpl = log --pretty=\"%Cblue%h%Creset %Cgreen[%cr]%Creset %s\" origin/production..origin/master
    l = log --all --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset %Cblue%an%Creset' --abbrev-commit --date=relative
    ci = commit
    ca = commit --amend
    eu = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
    au = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
    cp = "!git checkout production && git pull --rebase && git cherry-pick master && git push && git checkout master"
    cpp = "!f() { git checkout production && git pull --rebase && git cherry-pick $1 && git push && git checkout master ; }; f"
    catchup = "!git fetch origin; git rebase origin/master"
    sync = "!git pl && git push"
    # Alternate log display from Scott Chacon
    lol = log --pretty=oneline --abbrev-commit --graph --decorate
    sub = submodule update --init

    #############################
    # public/private mirrors aliases
    #############################

    pl-tags = "!git fetch core --tags && git fetch origin --tags"
    pl = "!git pl-tags && git fetch --prune && git rebase --preserve-merges `git rev-parse --abbrev-ref --symbolic-full-name @{u}`"

    # Bring alias from public repo to private
    put-in-master = "!git checkout master && git pull --rebase && git cherry-pick core/master && git push && git checkout core-master"

    # use this when cherry picking from private to public
    drop-deleted-by-us = "!git rm `git status --porcelain | grep ^DU | cut -d' ' -f2`"

    # do this after all commits are ported from public to private
    update-core-tag = "!git tag -f r-private core/master && git push -f core r-private;"

    # do this after all commits are ported from private to public
    update-master-tag = "!git tag -f r-public origin/master && git push -f origin r-public;"

    # skip a cherry-pick when in progres
    skip-cherry = "!git reset; git cherry-pick --continue"

    update-tags = "!git update-core-tag && git update-master-tag"
